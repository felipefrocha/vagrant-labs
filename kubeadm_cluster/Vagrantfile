Vagrant.configure("2") do |config|
  # config.vm.box         = "hashicorp/bionic64"
  config.vm.box         = "generic/ubuntu2004"
  config.vm.box_check_update = true
  N=3
  (1..N).each do |machine_id|
    config.vm.define "machine#{machine_id}" do |machine|
      machine.vm.hostname = "machine#{machine_id}"
      machine.vm.network "public_network", ip: "192.168.15.#{70+machine_id}", bridge: "enp1s0"
      # Define machine size
      machine.vm.provider "virtualbox" do |vb|
        vb.memory = "2048"
        vb.cpus = 2
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", "#{100/N}"]
      end
      

      # Only execute once the Ansible provisioner,
      # when all the machines are up and ready.
      if machine_id == N
      #   machine.vm.provision "ansible_local" do |ansible_local|
      #   ansible_local.playbook = "provisioning/main.yml"
      #   ansible_local.galaxy_role_file = "provisioning/requirements.yml"
      #   ansible_local.galaxy_roles_path = "provisioning/roles/"
      #   ansible_local.galaxy_command = "ansible-galaxy install --role-file=%{role_file} --roles-path=%{roles_path} --force"
      # end
        machine.vm.provision :ansible do |ansible|
          # Disable default limit to connect to all the machines
          ansible.limit = "all"
          ansible.playbook = "provisioning/main.yml"
          ansible.groups = {
            "masters" => [],
            "masters:children" => ["mac1","mac2","mac3"],
            "master_nodes" => [],
            "master_nodes:children" => ["mac1"],
            "join_masters" => [],
            "join_masters:children" => ["mac2","mac3"],
            "workers" => [],
            "workers:children" => ["mac4","mac5","mac6"],
            "all:children" => ["masters","workers"],
            "all:vars" => {"ansible_python_interpreter" => "/usr/bin/python3",
               "user" => "vagrant"},
            "mac1" => ["machine1"],
            "mac2" => ["machine2"],
            "mac3" => ["machine3"],
            "mac4" => ["machine4"],
            "mac5" => ["machine5"],
            "mac6" => ["machine6"],
            "mac1:vars" => {"hostname.name" => "master1", "hostname.enabled" => "False"},
            "mac2:vars" => {"hostname.name" => "master2", "hostname.enabled" => "False"},
            "mac3:vars" => {"hostname.name" => "master3", "hostname.enabled" => "False"},
            "mac4:vars" => {"hostname.name" => "master3", "hostname.enabled" => "False"},
            "mac5:vars" => {"hostname.name" => "master3", "hostname.enabled" => "False"},
            "mac6:vars" => {"hostname.name" => "master3", "hostname.enabled" => "False"},
          }
        end
      end
    end
  end
end
